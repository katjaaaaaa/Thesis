<prompt>
   <instruction>
      You are a summarization model. Generate a summary of a text taken from a scientific paper. Divide the summary into key concepts and/or subsections. Per concept list each cited paper's authors and contributions they've made. The examples of how authors can be notated in the text are "Author et al. (2019)" or "(Author et al., 2017)". If no authors are introduced, assign the contribution to the authors of the paper the text was taken from. The structure of each contribution must be as following:
      - Author at al. (2020): contribution
      To notate the authors of the paper the text was taken from, use the following structure:
      - Authors of the paper: contribution
      Ensure that your answer is accurate and doesn't contain any information not directly supported by the text.
      Below three example summaries are provided. Each of examples is labeled with <example> tag. The examples range in quallity which are illustrated according to the following criteria:
         1. Quality of the summary's structure: The summary follows the paper's structure and contains necessary subsections if they were introduced in the paper. In other terms, if the text adds a concept and then provides the cited papers related to the concept, the model must structure the summary to highlight the relation between them.
         2. Quality of the summarization: The summary has no hallucinations, and all the information can be found in the source text.
         3. Quality of the sources' citations: Each cited paper mentioned in the target paper is introduced in the summary and contains a brief but clear description of what this source's contribution is.
      Base the generated summary on the summaries below that received high ratings, and avoid the practices used in the summaries with low ratings.
      Below you find the <input> tag. Use the text within the tags to generate a summary. Put the answer in the <summary> tag. Stop printing after closing the <summary> tag.  
   </instruction>
   <example>
      <text example article>
         'There are two lines of works conducted on multimodal sentiment analysis.   One is focusing on utterance-level multimodal feature fusion.  These methods use the features of the overall utterance.  For example, they first extract the frame-level visual or acoustic features and then average them to obtain the final features, which are called utterance-level features.  The utterance-level textual features can be obtained by applying RNNs for words.  The obtained utterance-level features are fed into the fusion model to get the multimodal representation.  Some models have been proposed for effective multimodal feature fusion.  Zadeh et al. (2017) proposed Tensor Fusion to explicitly capture unimodal, bimodal, and trimodal interactions.  But this method uses the three-fold Cartesian product to fuse the multimodal features, which makes the time cost very high.  To address it, Liu et al. (2018) presented the Efficient Low-rank Multimodal Fusion, which applies multimodal fusion using low-rank tensors to accelerate the fusion process.  Mai et al. (2020) proposed a graph fusion network to model unimodal, bimodal, and trimodal interactions successively.   The utterance-level features mainly contain global information, which may fail to capture local information.  Therefore, recent works are mostly focusing on word-level multimodal feature fusion.  And our work in this paper is also based on wordlevel features.  To extract word-level features, the first step is applying force alignment to obtain the timestamps of each word including the start time and end time.  And then following the timestamps, the utterance is split into some video clips.  Finally, word-level visual or acoustic features are obtained by averaging the frame-level features of the video clips.  Based on word-level features, lots of methods are proposed for performing word-level multimodal feature fusion.  Zadeh et al. (2018a) proposed the Memory Fusion Network(MFN) to capture the interactions across both different modalities and timesteps.  Inspired by the observation that the meaning of words often varies dynamically in different non-verbal contexts, Wang et al. (2019) proposed the Recurrent Attended Variation Embedding Network (RAVEN).  This model applies the Attention Gating module to fuse the word-level features, which can dynamically use the non-verbal features to shift the word embeddings.  Tsai et al. (2019) presented multimodal transformer (Mult), which uses the cross-modal attention to capture the bimodal interactions, motivated by the great success of transformer in NLP(Vaswani et al., 2017).   Besides, there is a related work (Pham et al., 2019) need to be noticed, which proposed that translation from a source to a target modality provides away to learn joint representations and proposed the Multimodal Cyclic Translation Network model (MCTN) to learn joint multimodal representations.  Comparing to this work, our model has a significant difference.  That is we use the crossmodal prediction task to distinguish the shared and private non-textual features instead of training the model as an auxiliary task.  In this way, we can obtain more useful information by deeply probing the cross-modal prediction model. '
      </text example article>
      <example article summary>
         ## Multimodal sentiment analysis: Utterance-level vs. word-level features
         This passage discusses two main approaches for multimodal sentiment analysis: utterance-level and word-level feature fusion.
         **Utterance-level multimodal feature fusion**
         * Focuses on capturing sentiment of the entire utterance (e.g., sentence)
         * Methods:
         * Average frame-level visual/acoustic features to create utterance-level features (the authors of the paper being summarized)
         * Apply RNNs on words to get utterance-level textual features (the authors of the paper being summarized)
         * Fusion models:
         * Tensor Fusion (Zadeh et al., 2017) - captures unimodal, bimodal and trimodal interactions (expensive to compute)
         * Efficient Low-rank Multimodal Fusion (Liu et al., 2018) - faster alternative to Tensor Fusion using low-rank tensors
         * Graph fusion network (Mai et al., 2020) - models interactions sequentially

         **Word-level multimodal feature fusion**
         * Aims to capture sentiment variations within an utterance by focusing on individual words
         * Requires force alignment to identify timestamps for each word
         * Methods to extract word-level features:
         * Split utterance into video clips based on word timestamps (the authors of the paper being summarized)
         * Average frame-level features within each clip (the authors of the paper being summarized)
         * Fusion models:
         * Memory Fusion Network (MFN) (Zadeh et al., 2018a) - captures interactions between modalities and time steps
         * Recurrent Attended Variation Embedding Network (RAVEN) (Wang et al., 2019) - dynamically shifts word embeddings based on non-verbal cues using Attention Gating
         * Multimodal Transformer (Mult) (Tsai et al., 2019) - employs cross-modal attention to capture interactions between modalities

         **Additionally mentioned work:**
         * Multimodal Cyclic Translation Network (MCTN) (Pham et al., 2019) - learns joint representations by translating between modalities (the authors of the paper being summarized)
         * This work differs from the approach proposed in the current paper by using a cross-modal prediction task instead of an auxiliary translation task.
      </example article summary>
      <rankings example article summary>
         Quality structure: 2/5
         Quality translation: 3/5
         Quality citations: 4/5
      </rankings example article summary>
   </example>
   <example>
      <text example article>
         'There are two lines of works conducted on multimodal sentiment analysis.   One is focusing on utterance-level multimodal feature fusion.  These methods use the features of the overall utterance.  For example, they first extract the frame-level visual or acoustic features and then average them to obtain the final features, which are called utterance-level features.  The utterance-level textual features can be obtained by applying RNNs for words.  The obtained utterance-level features are fed into the fusion model to get the multimodal representation.  Some models have been proposed for effective multimodal feature fusion.  Zadeh et al. (2017) proposed Tensor Fusion to explicitly capture unimodal, bimodal, and trimodal interactions.  But this method uses the three-fold Cartesian product to fuse the multimodal features, which makes the time cost very high.  To address it, Liu et al. (2018) presented the Efficient Low-rank Multimodal Fusion, which applies multimodal fusion using low-rank tensors to accelerate the fusion process.  Mai et al. (2020) proposed a graph fusion network to model unimodal, bimodal, and trimodal interactions successively.   The utterance-level features mainly contain global information, which may fail to capture local information.  Therefore, recent works are mostly focusing on word-level multimodal feature fusion.  And our work in this paper is also based on wordlevel features.  To extract word-level features, the first step is applying force alignment to obtain the timestamps of each word including the start time and end time.  And then following the timestamps, the utterance is split into some video clips.  Finally, word-level visual or acoustic features are obtained by averaging the frame-level features of the video clips.  Based on word-level features, lots of methods are proposed for performing word-level multimodal feature fusion.  Zadeh et al. (2018a) proposed the Memory Fusion Network(MFN) to capture the interactions across both different modalities and timesteps.  Inspired by the observation that the meaning of words often varies dynamically in different non-verbal contexts, Wang et al. (2019) proposed the Recurrent Attended Variation Embedding Network (RAVEN).  This model applies the Attention Gating module to fuse the word-level features, which can dynamically use the non-verbal features to shift the word embeddings.  Tsai et al. (2019) presented multimodal transformer (Mult), which uses the cross-modal attention to capture the bimodal interactions, motivated by the great success of transformer in NLP(Vaswani et al., 2017).   Besides, there is a related work (Pham et al., 2019) need to be noticed, which proposed that translation from a source to a target modality provides away to learn joint representations and proposed the Multimodal Cyclic Translation Network model (MCTN) to learn joint multimodal representations.  Comparing to this work, our model has a significant difference.  That is we use the crossmodal prediction task to distinguish the shared and private non-textual features instead of training the model as an auxiliary task.  In this way, we can obtain more useful information by deeply probing the cross-modal prediction model. '
      </text example article>
      <example article summary>
         **Key Concepts and Contributions:**
         1. **Utterance-level Multimodal Feature Fusion:**
            - Techniques involve extracting overall utterance features and applying fusion methods.
            - Zadeh et al. (2017): Proposed Tensor Fusion method explicitly capturing unimodal, bimodal, and trimodal interactions.
            - Liu et al. (2018): Introduced Efficient Low-rank Multimodal Fusion using low-rank tensors for faster fusion process.
            - Mai et al. (2020): Proposed a graph fusion network for modeling unimodal, bimodal, and trimodal interactions successively.
         2. **Word-level Multimodal Feature Fusion:**
            - Recent focus due to limitations of utterance-level features.
            - Process involves force alignment for word timestamps and averaging frame-level features of video clips.
            - Zadeh et al. (2018a): Introduced Memory Fusion Network (MFN) capturing interactions across modalities and timesteps.
            - Wang et al. (2019): Developed Recurrent Attended Variation Embedding Network (RAVEN) using Attention Gating module for dynamic fusion.
            - Tsai et al. (2019): Presented Multimodal transformer (Mult) using cross-modal attention to capture bimodal interactions.

         3. **Comparison with Related Work:**
            - Pham et al. (2019): Proposed Multimodal Cyclic Translation Network model (MCTN) for joint multimodal representations through translation.
            - Authors emphasized the use of crossmodal prediction task instead of training as an auxiliary task, aiming for deeper insights into shared and private non-textual features.
         This summary provides an overview of the main concepts and contributions in the scientific paper regarding multimodal sentiment analysis, as well as the advancements proposed by various researchers.
      </example article summary>
      <rankings example article summary>
         Quality structure: 5/5
         Quality summarization: 3/5
         Quality sources: 5/5
      </rankings example article summary>
   </example>
   <example>
      <text example article>
         'There are two lines of works conducted on multimodal sentiment analysis.   One is focusing on utterance-level multimodal feature fusion.  These methods use the features of the overall utterance.  For example, they first extract the frame-level visual or acoustic features and then average them to obtain the final features, which are called utterance-level features.  The utterance-level textual features can be obtained by applying RNNs for words.  The obtained utterance-level features are fed into the fusion model to get the multimodal representation.  Some models have been proposed for effective multimodal feature fusion.  Zadeh et al. (2017) proposed Tensor Fusion to explicitly capture unimodal, bimodal, and trimodal interactions.  But this method uses the three-fold Cartesian product to fuse the multimodal features, which makes the time cost very high.  To address it, Liu et al. (2018) presented the Efficient Low-rank Multimodal Fusion, which applies multimodal fusion using low-rank tensors to accelerate the fusion process.  Mai et al. (2020) proposed a graph fusion network to model unimodal, bimodal, and trimodal interactions successively.   The utterance-level features mainly contain global information, which may fail to capture local information.  Therefore, recent works are mostly focusing on word-level multimodal feature fusion.  And our work in this paper is also based on wordlevel features.  To extract word-level features, the first step is applying force alignment to obtain the timestamps of each word including the start time and end time.  And then following the timestamps, the utterance is split into some video clips.  Finally, word-level visual or acoustic features are obtained by averaging the frame-level features of the video clips.  Based on word-level features, lots of methods are proposed for performing word-level multimodal feature fusion.  Zadeh et al. (2018a) proposed the Memory Fusion Network(MFN) to capture the interactions across both different modalities and timesteps.  Inspired by the observation that the meaning of words often varies dynamically in different non-verbal contexts, Wang et al. (2019) proposed the Recurrent Attended Variation Embedding Network (RAVEN).  This model applies the Attention Gating module to fuse the word-level features, which can dynamically use the non-verbal features to shift the word embeddings.  Tsai et al. (2019) presented multimodal transformer (Mult), which uses the cross-modal attention to capture the bimodal interactions, motivated by the great success of transformer in NLP(Vaswani et al., 2017).   Besides, there is a related work (Pham et al., 2019) need to be noticed, which proposed that translation from a source to a target modality provides away to learn joint representations and proposed the Multimodal Cyclic Translation Network model (MCTN) to learn joint multimodal representations.  Comparing to this work, our model has a significant difference.  That is we use the crossmodal prediction task to distinguish the shared and private non-textual features instead of training the model as an auxiliary task.  In this way, we can obtain more useful information by deeply probing the cross-modal prediction model. '
      </text example article>

      <example article summary>
         The text discusses two main lines of work in multimodal sentiment analysis: utterance-level multimodal feature fusion and word-level multimodal feature fusion.

         **Utterance-Level Multimodal Feature Fusion**

         - **Zadeh et al. (2017)**: Proposed Tensor Fusion to capture unimodal, bimodal, and trimodal interactions. However, this method uses the three-fold Cartesian product to fuse the multimodal features, which results in high time cost.
         - **Liu et al. (2018)**: Presented the Efficient Low-rank Multimodal Fusion, which applies multimodal fusion using low-rank tensors to accelerate the fusion process.
         - **Mai et al. (2020)**: Proposed a graph fusion network to model unimodal, bimodal, and trimodal interactions successively.

         **Word-Level Multimodal Feature Fusion**

         - **Zadeh et al. (2018a)**: Proposed the Memory Fusion Network (MFN) to capture the interactions across both different modalities and timesteps.
         - **Wang et al. (2019)**: Proposed the Recurrent Attended Variation Embedding Network (RAVEN). This model applies the Attention Gating module to fuse the word-level features, which can dynamically use the non-verbal features to shift the word embeddings.
         - **Tsai et al. (2019)**: Presented multimodal transformer (Mult), which uses the cross-modal attention to capture the bimodal interactions, motivated by the great success of transformer in NLP (Vaswani et al., 2017).
         - **Pham et al. (2019)**: Proposed that translation from a source to a target modality provides a way to learn joint representations and proposed the Multimodal Cyclic Translation Network model (MCTN) to learn joint multimodal representations.

         **Authors of the Paper**

         - **Authors of the Paper**: Their work is based on word-level features. They use the crossmodal prediction task to distinguish the shared and private non-textual features instead of training the model as an auxiliary task. This approach allows them to obtain more useful information by deeply probing the cross-modal prediction model.  
      </example article summary>

      <rankings example article summary>
         Quality structure: 5/5
         Quality summarization: 5/5
         Quality sources citation: 5/5
      </rankings example article summary>
   </example>
   <input>
      "To the best of our knowledge, HappyDB is the first crowdsourced corpus of happy moments which can be used for understanding the language people use to describe happy events.  There has been recent interest in creating datasets in the area of mental health.  Althoff et al. (Althoff et al., 2016) conducted a large scale analysis on counseling conversational logs collected from short message services (SMS) for mental illness study.  They studied how various linguistic aspects of conversations are correlated with conversation outcomes.  Mihalcea et al. (Mihalcea and Liu, 2006) performed text analysis on blog posts from LiveJournal (where posts can be assigned happy/sad tags by their authors).  Lin et al. (Lin et al., 2016) measure stress from short texts by identifying the stressors and the stress levels.  They classified tweets into 12 stress categories defined by the stress scale in (Holmes and Rahe, 1967).  Last year alone, there were multiple research efforts that obtained datasets via crowdsourcing and applied natural language techniques to understand different corpora.  For example, SQuAD (Rajpurkar et al., 2016) created a largescale dataset for question-answering.  The crowdsourced workers were asked to create questions based on a paragraph obtained from Wikipedia.  They employed MTurk workers with strong experience and a high approval rating to ensure the quality of the dataset.  We did not select the workers based on their qualification for HappyDB as our task is cognitively easier than SQuAD's and we want to avoid bias in our corpus.  HappyDB is similar to SQuAD in terms of the scale of the crowdsourced dataset.  However, unlike SQuAD, which was designed specifically for studying the question answering problem, the problems that HappyDB can be used for are more open-ended. "
   </input>
</prompt>